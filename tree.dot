digraph AST {
1 [shape=box, label="VarDecl name='nums'"];
6 [shape=box, label="Location name='n'\ntype: int"];
7 [shape=box, label="Literal value=1\ntype: int"];
5 [shape=box, label="BinaryOp op='<='\ntype: int"];
5 -> 6;
5 -> 7;
10 [shape=box, label="Literal value=1\ntype: int"];
9 [shape=box, label="Return"];
9 -> 10;
8 [shape=box, label="Block\nsymbolTable: (empty)"];
8 -> 9;
4 [shape=box, label="Conditional"];
4 -> 5;
4 -> 8;
13 [shape=box, label="Location name='n'\ntype: int"];
16 [shape=box, label="Location name='n'\ntype: int"];
17 [shape=box, label="Literal value=1\ntype: int"];
15 [shape=box, label="BinaryOp op='-'\ntype: int"];
15 -> 16;
15 -> 17;
14 [shape=box, label="FuncCall name='fact'\ntype: int"];
14 -> 15;
12 [shape=box, label="BinaryOp op='*'\ntype: int"];
12 -> 13;
12 -> 14;
11 [shape=box, label="Return"];
11 -> 12;
3 [shape=box, label="Block\nsymbolTable: (empty)"];
3 -> 4;
3 -> 11;
2 [shape=box, label="FuncDecl name='fact'\nsymbolTable: \n  n : int"];
2 -> 3;
22 [shape=box, label="Location name='n'\ntype: int"];
23 [shape=box, label="Literal value=0\ntype: int"];
21 [shape=box, label="BinaryOp op='<='\ntype: int"];
21 -> 22;
21 -> 23;
26 [shape=box, label="Literal value=0\ntype: int"];
25 [shape=box, label="Return"];
25 -> 26;
24 [shape=box, label="Block\nsymbolTable: (empty)"];
24 -> 25;
20 [shape=box, label="Conditional"];
20 -> 21;
20 -> 24;
29 [shape=box, label="Location name='n'\ntype: int"];
30 [shape=box, label="Literal value=1\ntype: int"];
28 [shape=box, label="BinaryOp op='=='\ntype: bool"];
28 -> 29;
28 -> 30;
33 [shape=box, label="Literal value=1\ntype: int"];
32 [shape=box, label="Return"];
32 -> 33;
31 [shape=box, label="Block\nsymbolTable: (empty)"];
31 -> 32;
27 [shape=box, label="Conditional"];
27 -> 28;
27 -> 31;
38 [shape=box, label="Location name='n'\ntype: int"];
39 [shape=box, label="Literal value=1\ntype: int"];
37 [shape=box, label="BinaryOp op='-'\ntype: int"];
37 -> 38;
37 -> 39;
36 [shape=box, label="FuncCall name='fib'\ntype: int"];
36 -> 37;
42 [shape=box, label="Location name='n'\ntype: int"];
43 [shape=box, label="Literal value=2\ntype: int"];
41 [shape=box, label="BinaryOp op='-'\ntype: int"];
41 -> 42;
41 -> 43;
40 [shape=box, label="FuncCall name='fib'\ntype: int"];
40 -> 41;
35 [shape=box, label="BinaryOp op='+'\ntype: int"];
35 -> 36;
35 -> 40;
34 [shape=box, label="Return"];
34 -> 35;
19 [shape=box, label="Block\nsymbolTable: (empty)"];
19 -> 20;
19 -> 27;
19 -> 34;
18 [shape=box, label="FuncDecl name='fib'\nsymbolTable: \n  n : int"];
18 -> 19;
46 [shape=box, label="VarDecl name='half_n'"];
48 [shape=box, label="Location name='half_n'\ntype: int"];
51 [shape=box, label="Location name='n'\ntype: int"];
52 [shape=box, label="Literal value=2\ntype: int"];
50 [shape=box, label="BinaryOp op='/'\ntype: int"];
50 -> 51;
50 -> 52;
53 [shape=box, label="Literal value=1\ntype: int"];
49 [shape=box, label="BinaryOp op='+'\ntype: int"];
49 -> 50;
49 -> 53;
47 [shape=box, label="Assignment"];
47 -> 48;
47 -> 49;
56 [shape=box, label="Location name='n'\ntype: int"];
57 [shape=box, label="Literal value=1\ntype: int"];
55 [shape=box, label="BinaryOp op='<='\ntype: int"];
55 -> 56;
55 -> 57;
60 [shape=box, label="Literal value=false\ntype: bool"];
59 [shape=box, label="Return"];
59 -> 60;
58 [shape=box, label="Block\nsymbolTable: (empty)"];
58 -> 59;
54 [shape=box, label="Conditional"];
54 -> 55;
54 -> 58;
63 [shape=box, label="Location name='half_n'\ntype: int"];
64 [shape=box, label="Literal value=1\ntype: int"];
62 [shape=box, label="BinaryOp op='>'\ntype: int"];
62 -> 63;
62 -> 64;
69 [shape=box, label="Location name='n'\ntype: int"];
70 [shape=box, label="Location name='half_n'\ntype: int"];
68 [shape=box, label="BinaryOp op='%'\ntype: int"];
68 -> 69;
68 -> 70;
71 [shape=box, label="Literal value=0\ntype: int"];
67 [shape=box, label="BinaryOp op='=='\ntype: bool"];
67 -> 68;
67 -> 71;
74 [shape=box, label="Literal value=false\ntype: bool"];
73 [shape=box, label="Return"];
73 -> 74;
72 [shape=box, label="Block\nsymbolTable: (empty)"];
72 -> 73;
66 [shape=box, label="Conditional"];
66 -> 67;
66 -> 72;
76 [shape=box, label="Location name='half_n'\ntype: int"];
78 [shape=box, label="Location name='half_n'\ntype: int"];
79 [shape=box, label="Literal value=1\ntype: int"];
77 [shape=box, label="BinaryOp op='-'\ntype: int"];
77 -> 78;
77 -> 79;
75 [shape=box, label="Assignment"];
75 -> 76;
75 -> 77;
65 [shape=box, label="Block\nsymbolTable: (empty)"];
65 -> 66;
65 -> 75;
61 [shape=box, label="WhileLoop"];
61 -> 62;
61 -> 65;
81 [shape=box, label="Literal value=true\ntype: bool"];
80 [shape=box, label="Return"];
80 -> 81;
45 [shape=box, label="Block\nsymbolTable: \n  half_n : int"];
45 -> 46;
45 -> 47;
45 -> 54;
45 -> 61;
45 -> 80;
44 [shape=box, label="FuncDecl name='is_prime'\nsymbolTable: \n  n : int"];
44 -> 45;
84 [shape=box, label="VarDecl name='temp'"];
87 [shape=box, label="Location name='b'\ntype: int"];
88 [shape=box, label="Literal value=0\ntype: int"];
86 [shape=box, label="BinaryOp op='!='\ntype: bool"];
86 -> 87;
86 -> 88;
91 [shape=box, label="Location name='temp'\ntype: int"];
92 [shape=box, label="Location name='b'\ntype: int"];
90 [shape=box, label="Assignment"];
90 -> 91;
90 -> 92;
94 [shape=box, label="Location name='b'\ntype: int"];
96 [shape=box, label="Location name='a'\ntype: int"];
97 [shape=box, label="Location name='b'\ntype: int"];
95 [shape=box, label="BinaryOp op='%'\ntype: int"];
95 -> 96;
95 -> 97;
93 [shape=box, label="Assignment"];
93 -> 94;
93 -> 95;
99 [shape=box, label="Location name='a'\ntype: int"];
100 [shape=box, label="Location name='temp'\ntype: int"];
98 [shape=box, label="Assignment"];
98 -> 99;
98 -> 100;
89 [shape=box, label="Block\nsymbolTable: (empty)"];
89 -> 90;
89 -> 93;
89 -> 98;
85 [shape=box, label="WhileLoop"];
85 -> 86;
85 -> 89;
102 [shape=box, label="Location name='a'\ntype: int"];
101 [shape=box, label="Return"];
101 -> 102;
83 [shape=box, label="Block\nsymbolTable: \n  temp : int"];
83 -> 84;
83 -> 85;
83 -> 101;
82 [shape=box, label="FuncDecl name='gcd'\nsymbolTable: \n  a : int\n  b : int"];
82 -> 83;
105 [shape=box, label="VarDecl name='total'"];
107 [shape=box, label="Location name='total'\ntype: int"];
108 [shape=box, label="Literal value=0\ntype: int"];
106 [shape=box, label="Assignment"];
106 -> 107;
106 -> 108;
111 [shape=box, label="Location name='len'\ntype: int"];
112 [shape=box, label="Literal value=0\ntype: int"];
110 [shape=box, label="BinaryOp op='<='\ntype: int"];
110 -> 111;
110 -> 112;
115 [shape=box, label="Literal value=0\ntype: int"];
114 [shape=box, label="Return"];
114 -> 115;
113 [shape=box, label="Block\nsymbolTable: (empty)"];
113 -> 114;
109 [shape=box, label="Conditional"];
109 -> 110;
109 -> 113;
118 [shape=box, label="Location name='len'\ntype: int"];
119 [shape=box, label="Literal value=0\ntype: int"];
117 [shape=box, label="BinaryOp op='>'\ntype: int"];
117 -> 118;
117 -> 119;
122 [shape=box, label="Location name='total'\ntype: int"];
124 [shape=box, label="Location name='total'\ntype: int"];
127 [shape=box, label="Location name='len'\ntype: int"];
128 [shape=box, label="Literal value=1\ntype: int"];
126 [shape=box, label="BinaryOp op='-'\ntype: int"];
126 -> 127;
126 -> 128;
125 [shape=box, label="Location name='nums'\ntype: int"];
125 -> 126;
123 [shape=box, label="BinaryOp op='+'\ntype: int"];
123 -> 124;
123 -> 125;
121 [shape=box, label="Assignment"];
121 -> 122;
121 -> 123;
130 [shape=box, label="Location name='len'\ntype: int"];
132 [shape=box, label="Location name='len'\ntype: int"];
133 [shape=box, label="Literal value=1\ntype: int"];
131 [shape=box, label="BinaryOp op='-'\ntype: int"];
131 -> 132;
131 -> 133;
129 [shape=box, label="Assignment"];
129 -> 130;
129 -> 131;
120 [shape=box, label="Block\nsymbolTable: (empty)"];
120 -> 121;
120 -> 129;
116 [shape=box, label="WhileLoop"];
116 -> 117;
116 -> 120;
135 [shape=box, label="Location name='total'\ntype: int"];
134 [shape=box, label="Return"];
134 -> 135;
104 [shape=box, label="Block\nsymbolTable: \n  total : int"];
104 -> 105;
104 -> 106;
104 -> 109;
104 -> 116;
104 -> 134;
103 [shape=box, label="FuncDecl name='sum_nums'\nsymbolTable: \n  len : int"];
103 -> 104;
138 [shape=box, label="VarDecl name='temp'"];
141 [shape=box, label="Location name='len'\ntype: int"];
142 [shape=box, label="Literal value=1\ntype: int"];
140 [shape=box, label="BinaryOp op='<'\ntype: int"];
140 -> 141;
140 -> 142;
144 [shape=box, label="Return"];
143 [shape=box, label="Block\nsymbolTable: (empty)"];
143 -> 144;
139 [shape=box, label="Conditional"];
139 -> 140;
139 -> 143;
147 [shape=box, label="Location name='len'\ntype: int"];
148 [shape=box, label="Literal value=1\ntype: int"];
146 [shape=box, label="BinaryOp op='-'\ntype: int"];
146 -> 147;
146 -> 148;
145 [shape=box, label="FuncCall name='sort_nums'\ntype: void"];
145 -> 146;
152 [shape=box, label="Location name='len'\ntype: int"];
153 [shape=box, label="Literal value=1\ntype: int"];
151 [shape=box, label="BinaryOp op='>='\ntype: int"];
151 -> 152;
151 -> 153;
156 [shape=box, label="Location name='len'\ntype: int"];
155 [shape=box, label="Location name='nums'\ntype: int"];
155 -> 156;
159 [shape=box, label="Location name='len'\ntype: int"];
160 [shape=box, label="Literal value=1\ntype: int"];
158 [shape=box, label="BinaryOp op='-'\ntype: int"];
158 -> 159;
158 -> 160;
157 [shape=box, label="Location name='nums'\ntype: int"];
157 -> 158;
154 [shape=box, label="BinaryOp op='<'\ntype: int"];
154 -> 155;
154 -> 157;
150 [shape=box, label="BinaryOp op='&&'\ntype: bool"];
150 -> 151;
150 -> 154;
163 [shape=box, label="Location name='temp'\ntype: int"];
165 [shape=box, label="Location name='len'\ntype: int"];
164 [shape=box, label="Location name='nums'\ntype: int"];
164 -> 165;
162 [shape=box, label="Assignment"];
162 -> 163;
162 -> 164;
168 [shape=box, label="Location name='len'\ntype: int"];
167 [shape=box, label="Location name='nums'\ntype: int"];
167 -> 168;
171 [shape=box, label="Location name='len'\ntype: int"];
172 [shape=box, label="Literal value=1\ntype: int"];
170 [shape=box, label="BinaryOp op='-'\ntype: int"];
170 -> 171;
170 -> 172;
169 [shape=box, label="Location name='nums'\ntype: int"];
169 -> 170;
166 [shape=box, label="Assignment"];
166 -> 167;
166 -> 169;
176 [shape=box, label="Location name='len'\ntype: int"];
177 [shape=box, label="Literal value=1\ntype: int"];
175 [shape=box, label="BinaryOp op='-'\ntype: int"];
175 -> 176;
175 -> 177;
174 [shape=box, label="Location name='nums'\ntype: int"];
174 -> 175;
178 [shape=box, label="Location name='temp'\ntype: int"];
173 [shape=box, label="Assignment"];
173 -> 174;
173 -> 178;
180 [shape=box, label="Location name='len'\ntype: int"];
182 [shape=box, label="Location name='len'\ntype: int"];
183 [shape=box, label="Literal value=1\ntype: int"];
181 [shape=box, label="BinaryOp op='-'\ntype: int"];
181 -> 182;
181 -> 183;
179 [shape=box, label="Assignment"];
179 -> 180;
179 -> 181;
161 [shape=box, label="Block\nsymbolTable: (empty)"];
161 -> 162;
161 -> 166;
161 -> 173;
161 -> 179;
149 [shape=box, label="WhileLoop"];
149 -> 150;
149 -> 161;
184 [shape=box, label="Return"];
137 [shape=box, label="Block\nsymbolTable: \n  temp : int"];
137 -> 138;
137 -> 139;
137 -> 145;
137 -> 149;
137 -> 184;
136 [shape=box, label="FuncDecl name='sort_nums'\nsymbolTable: \n  len : int"];
136 -> 137;
187 [shape=box, label="VarDecl name='row'"];
188 [shape=box, label="VarDecl name='space'"];
189 [shape=box, label="VarDecl name='star'"];
191 [shape=box, label="Location name='row'\ntype: int"];
192 [shape=box, label="Literal value=0\ntype: int"];
190 [shape=box, label="Assignment"];
190 -> 191;
190 -> 192;
195 [shape=box, label="Location name='row'\ntype: int"];
196 [shape=box, label="Location name='base'\ntype: int"];
194 [shape=box, label="BinaryOp op='<'\ntype: int"];
194 -> 195;
194 -> 196;
199 [shape=box, label="Location name='space'\ntype: int"];
202 [shape=box, label="Location name='base'\ntype: int"];
203 [shape=box, label="Location name='row'\ntype: int"];
201 [shape=box, label="BinaryOp op='-'\ntype: int"];
201 -> 202;
201 -> 203;
204 [shape=box, label="Literal value=1\ntype: int"];
200 [shape=box, label="BinaryOp op='-'\ntype: int"];
200 -> 201;
200 -> 204;
198 [shape=box, label="Assignment"];
198 -> 199;
198 -> 200;
207 [shape=box, label="Location name='space'\ntype: int"];
208 [shape=box, label="Literal value=0\ntype: int"];
206 [shape=box, label="BinaryOp op='>'\ntype: int"];
206 -> 207;
206 -> 208;
211 [shape=box, label="Literal value=' '\ntype: str"];
210 [shape=box, label="FuncCall name='print_str'\ntype: void"];
210 -> 211;
213 [shape=box, label="Location name='space'\ntype: int"];
215 [shape=box, label="Location name='space'\ntype: int"];
216 [shape=box, label="Literal value=1\ntype: int"];
214 [shape=box, label="BinaryOp op='-'\ntype: int"];
214 -> 215;
214 -> 216;
212 [shape=box, label="Assignment"];
212 -> 213;
212 -> 214;
209 [shape=box, label="Block\nsymbolTable: (empty)"];
209 -> 210;
209 -> 212;
205 [shape=box, label="WhileLoop"];
205 -> 206;
205 -> 209;
218 [shape=box, label="Location name='star'\ntype: int"];
219 [shape=box, label="Literal value=0\ntype: int"];
217 [shape=box, label="Assignment"];
217 -> 218;
217 -> 219;
222 [shape=box, label="Location name='star'\ntype: int"];
225 [shape=box, label="Literal value=2\ntype: int"];
226 [shape=box, label="Location name='row'\ntype: int"];
224 [shape=box, label="BinaryOp op='*'\ntype: int"];
224 -> 225;
224 -> 226;
227 [shape=box, label="Literal value=1\ntype: int"];
223 [shape=box, label="BinaryOp op='+'\ntype: int"];
223 -> 224;
223 -> 227;
221 [shape=box, label="BinaryOp op='<'\ntype: int"];
221 -> 222;
221 -> 223;
230 [shape=box, label="Literal value='*'\ntype: str"];
229 [shape=box, label="FuncCall name='print_str'\ntype: void"];
229 -> 230;
232 [shape=box, label="Location name='star'\ntype: int"];
234 [shape=box, label="Location name='star'\ntype: int"];
235 [shape=box, label="Literal value=1\ntype: int"];
233 [shape=box, label="BinaryOp op='+'\ntype: int"];
233 -> 234;
233 -> 235;
231 [shape=box, label="Assignment"];
231 -> 232;
231 -> 233;
228 [shape=box, label="Block\nsymbolTable: (empty)"];
228 -> 229;
228 -> 231;
220 [shape=box, label="WhileLoop"];
220 -> 221;
220 -> 228;
237 [shape=box, label="Literal value='\\n'\ntype: str"];
236 [shape=box, label="FuncCall name='print_str'\ntype: void"];
236 -> 237;
239 [shape=box, label="Location name='row'\ntype: int"];
241 [shape=box, label="Location name='row'\ntype: int"];
242 [shape=box, label="Literal value=1\ntype: int"];
240 [shape=box, label="BinaryOp op='+'\ntype: int"];
240 -> 241;
240 -> 242;
238 [shape=box, label="Assignment"];
238 -> 239;
238 -> 240;
197 [shape=box, label="Block\nsymbolTable: (empty)"];
197 -> 198;
197 -> 205;
197 -> 217;
197 -> 220;
197 -> 236;
197 -> 238;
193 [shape=box, label="WhileLoop"];
193 -> 194;
193 -> 197;
243 [shape=box, label="Return"];
186 [shape=box, label="Block\nsymbolTable: \n  row : int\n  space : int\n  star : int"];
186 -> 187;
186 -> 188;
186 -> 189;
186 -> 190;
186 -> 193;
186 -> 243;
185 [shape=box, label="FuncDecl name='draw_triangle'\nsymbolTable: \n  base : int"];
185 -> 186;
246 [shape=box, label="VarDecl name='f'"];
248 [shape=box, label="Location name='f'\ntype: int"];
250 [shape=box, label="Location name='a'\ntype: int"];
249 [shape=box, label="FuncCall name='fact'\ntype: int"];
249 -> 250;
247 [shape=box, label="Assignment"];
247 -> 248;
247 -> 249;
252 [shape=box, label="Location name='f'\ntype: int"];
251 [shape=box, label="FuncCall name='print_int'\ntype: void"];
251 -> 252;
255 [shape=box, label="Location name='f'\ntype: int"];
256 [shape=box, label="Location name='correct'\ntype: int"];
254 [shape=box, label="BinaryOp op='!='\ntype: bool"];
254 -> 255;
254 -> 256;
259 [shape=box, label="Literal value=' INCORRECT!'\ntype: str"];
258 [shape=box, label="FuncCall name='print_str'\ntype: void"];
258 -> 259;
257 [shape=box, label="Block\nsymbolTable: (empty)"];
257 -> 258;
253 [shape=box, label="Conditional"];
253 -> 254;
253 -> 257;
261 [shape=box, label="Literal value='\\n'\ntype: str"];
260 [shape=box, label="FuncCall name='print_str'\ntype: void"];
260 -> 261;
262 [shape=box, label="Return"];
245 [shape=box, label="Block\nsymbolTable: \n  f : int"];
245 -> 246;
245 -> 247;
245 -> 251;
245 -> 253;
245 -> 260;
245 -> 262;
244 [shape=box, label="FuncDecl name='test_fact'\nsymbolTable: \n  a : int\n  correct : int"];
244 -> 245;
265 [shape=box, label="VarDecl name='p'"];
267 [shape=box, label="Location name='p'\ntype: bool"];
269 [shape=box, label="Location name='a'\ntype: int"];
268 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
268 -> 269;
266 [shape=box, label="Assignment"];
266 -> 267;
266 -> 268;
271 [shape=box, label="Location name='p'\ntype: bool"];
270 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
270 -> 271;
274 [shape=box, label="Location name='p'\ntype: bool"];
275 [shape=box, label="Location name='correct'\ntype: bool"];
273 [shape=box, label="BinaryOp op='!='\ntype: bool"];
273 -> 274;
273 -> 275;
278 [shape=box, label="Literal value=' INCORRECT!'\ntype: str"];
277 [shape=box, label="FuncCall name='print_str'\ntype: void"];
277 -> 278;
276 [shape=box, label="Block\nsymbolTable: (empty)"];
276 -> 277;
272 [shape=box, label="Conditional"];
272 -> 273;
272 -> 276;
280 [shape=box, label="Literal value='\\n'\ntype: str"];
279 [shape=box, label="FuncCall name='print_str'\ntype: void"];
279 -> 280;
281 [shape=box, label="Return"];
264 [shape=box, label="Block\nsymbolTable: \n  p : bool"];
264 -> 265;
264 -> 266;
264 -> 270;
264 -> 272;
264 -> 279;
264 -> 281;
263 [shape=box, label="FuncDecl name='test_prime'\nsymbolTable: \n  a : int\n  correct : bool"];
263 -> 264;
284 [shape=box, label="VarDecl name='g'"];
286 [shape=box, label="Location name='g'\ntype: int"];
288 [shape=box, label="Location name='a'\ntype: int"];
289 [shape=box, label="Location name='b'\ntype: int"];
287 [shape=box, label="FuncCall name='gcd'\ntype: int"];
287 -> 288;
287 -> 289;
285 [shape=box, label="Assignment"];
285 -> 286;
285 -> 287;
291 [shape=box, label="Location name='g'\ntype: int"];
290 [shape=box, label="FuncCall name='print_int'\ntype: void"];
290 -> 291;
294 [shape=box, label="Location name='g'\ntype: int"];
295 [shape=box, label="Location name='correct'\ntype: int"];
293 [shape=box, label="BinaryOp op='!='\ntype: bool"];
293 -> 294;
293 -> 295;
298 [shape=box, label="Literal value=' INCORRECT!'\ntype: str"];
297 [shape=box, label="FuncCall name='print_str'\ntype: void"];
297 -> 298;
296 [shape=box, label="Block\nsymbolTable: (empty)"];
296 -> 297;
292 [shape=box, label="Conditional"];
292 -> 293;
292 -> 296;
300 [shape=box, label="Literal value='\\n'\ntype: str"];
299 [shape=box, label="FuncCall name='print_str'\ntype: void"];
299 -> 300;
301 [shape=box, label="Return"];
283 [shape=box, label="Block\nsymbolTable: \n  g : int"];
283 -> 284;
283 -> 285;
283 -> 290;
283 -> 292;
283 -> 299;
283 -> 301;
282 [shape=box, label="FuncDecl name='test_gcd'\nsymbolTable: \n  a : int\n  b : int\n  correct : int"];
282 -> 283;
304 [shape=box, label="VarDecl name='sum'"];
307 [shape=box, label="Literal value=0\ntype: int"];
306 [shape=box, label="Location name='nums'\ntype: int"];
306 -> 307;
308 [shape=box, label="Literal value=5\ntype: int"];
305 [shape=box, label="Assignment"];
305 -> 306;
305 -> 308;
311 [shape=box, label="Literal value=1\ntype: int"];
310 [shape=box, label="Location name='nums'\ntype: int"];
310 -> 311;
312 [shape=box, label="Literal value=3\ntype: int"];
309 [shape=box, label="Assignment"];
309 -> 310;
309 -> 312;
315 [shape=box, label="Literal value=2\ntype: int"];
314 [shape=box, label="Location name='nums'\ntype: int"];
314 -> 315;
316 [shape=box, label="Literal value=8\ntype: int"];
313 [shape=box, label="Assignment"];
313 -> 314;
313 -> 316;
319 [shape=box, label="Literal value=3\ntype: int"];
318 [shape=box, label="Location name='nums'\ntype: int"];
318 -> 319;
320 [shape=box, label="Literal value=1\ntype: int"];
317 [shape=box, label="Assignment"];
317 -> 318;
317 -> 320;
323 [shape=box, label="Literal value=4\ntype: int"];
322 [shape=box, label="Location name='nums'\ntype: int"];
322 -> 323;
324 [shape=box, label="Literal value=4\ntype: int"];
321 [shape=box, label="Assignment"];
321 -> 322;
321 -> 324;
326 [shape=box, label="Location name='sum'\ntype: int"];
328 [shape=box, label="Location name='len'\ntype: int"];
327 [shape=box, label="FuncCall name='sum_nums'\ntype: int"];
327 -> 328;
325 [shape=box, label="Assignment"];
325 -> 326;
325 -> 327;
330 [shape=box, label="Location name='sum'\ntype: int"];
329 [shape=box, label="FuncCall name='print_int'\ntype: void"];
329 -> 330;
333 [shape=box, label="Location name='sum'\ntype: int"];
334 [shape=box, label="Location name='correct'\ntype: int"];
332 [shape=box, label="BinaryOp op='!='\ntype: bool"];
332 -> 333;
332 -> 334;
337 [shape=box, label="Literal value=' INCORRECT!'\ntype: str"];
336 [shape=box, label="FuncCall name='print_str'\ntype: void"];
336 -> 337;
335 [shape=box, label="Block\nsymbolTable: (empty)"];
335 -> 336;
331 [shape=box, label="Conditional"];
331 -> 332;
331 -> 335;
339 [shape=box, label="Literal value='\\n'\ntype: str"];
338 [shape=box, label="FuncCall name='print_str'\ntype: void"];
338 -> 339;
340 [shape=box, label="Return"];
303 [shape=box, label="Block\nsymbolTable: \n  sum : int"];
303 -> 304;
303 -> 305;
303 -> 309;
303 -> 313;
303 -> 317;
303 -> 321;
303 -> 325;
303 -> 329;
303 -> 331;
303 -> 338;
303 -> 340;
302 [shape=box, label="FuncDecl name='test_sum'\nsymbolTable: \n  len : int\n  correct : int"];
302 -> 303;
343 [shape=box, label="VarDecl name='start'"];
346 [shape=box, label="Literal value=0\ntype: int"];
345 [shape=box, label="Location name='nums'\ntype: int"];
345 -> 346;
347 [shape=box, label="Literal value=5\ntype: int"];
344 [shape=box, label="Assignment"];
344 -> 345;
344 -> 347;
350 [shape=box, label="Literal value=1\ntype: int"];
349 [shape=box, label="Location name='nums'\ntype: int"];
349 -> 350;
351 [shape=box, label="Literal value=3\ntype: int"];
348 [shape=box, label="Assignment"];
348 -> 349;
348 -> 351;
354 [shape=box, label="Literal value=2\ntype: int"];
353 [shape=box, label="Location name='nums'\ntype: int"];
353 -> 354;
355 [shape=box, label="Literal value=8\ntype: int"];
352 [shape=box, label="Assignment"];
352 -> 353;
352 -> 355;
358 [shape=box, label="Literal value=3\ntype: int"];
357 [shape=box, label="Location name='nums'\ntype: int"];
357 -> 358;
359 [shape=box, label="Literal value=1\ntype: int"];
356 [shape=box, label="Assignment"];
356 -> 357;
356 -> 359;
362 [shape=box, label="Literal value=4\ntype: int"];
361 [shape=box, label="Location name='nums'\ntype: int"];
361 -> 362;
363 [shape=box, label="Literal value=4\ntype: int"];
360 [shape=box, label="Assignment"];
360 -> 361;
360 -> 363;
365 [shape=box, label="Location name='start'\ntype: int"];
366 [shape=box, label="Literal value=0\ntype: int"];
364 [shape=box, label="Assignment"];
364 -> 365;
364 -> 366;
368 [shape=box, label="Literal value='Unsorted: '\ntype: str"];
367 [shape=box, label="FuncCall name='print_str'\ntype: void"];
367 -> 368;
371 [shape=box, label="Location name='start'\ntype: int"];
372 [shape=box, label="Location name='len'\ntype: int"];
370 [shape=box, label="BinaryOp op='<'\ntype: int"];
370 -> 371;
370 -> 372;
376 [shape=box, label="Location name='start'\ntype: int"];
375 [shape=box, label="Location name='nums'\ntype: int"];
375 -> 376;
374 [shape=box, label="FuncCall name='print_int'\ntype: void"];
374 -> 375;
378 [shape=box, label="Literal value=' '\ntype: str"];
377 [shape=box, label="FuncCall name='print_str'\ntype: void"];
377 -> 378;
380 [shape=box, label="Location name='start'\ntype: int"];
382 [shape=box, label="Location name='start'\ntype: int"];
383 [shape=box, label="Literal value=1\ntype: int"];
381 [shape=box, label="BinaryOp op='+'\ntype: int"];
381 -> 382;
381 -> 383;
379 [shape=box, label="Assignment"];
379 -> 380;
379 -> 381;
373 [shape=box, label="Block\nsymbolTable: (empty)"];
373 -> 374;
373 -> 377;
373 -> 379;
369 [shape=box, label="WhileLoop"];
369 -> 370;
369 -> 373;
385 [shape=box, label="Literal value='\\n'\ntype: str"];
384 [shape=box, label="FuncCall name='print_str'\ntype: void"];
384 -> 385;
387 [shape=box, label="Location name='start'\ntype: int"];
388 [shape=box, label="Literal value=0\ntype: int"];
386 [shape=box, label="Assignment"];
386 -> 387;
386 -> 388;
390 [shape=box, label="Location name='len'\ntype: int"];
389 [shape=box, label="FuncCall name='sort_nums'\ntype: void"];
389 -> 390;
392 [shape=box, label="Literal value='Sorted: '\ntype: str"];
391 [shape=box, label="FuncCall name='print_str'\ntype: void"];
391 -> 392;
395 [shape=box, label="Location name='start'\ntype: int"];
396 [shape=box, label="Location name='len'\ntype: int"];
394 [shape=box, label="BinaryOp op='<'\ntype: int"];
394 -> 395;
394 -> 396;
400 [shape=box, label="Location name='start'\ntype: int"];
399 [shape=box, label="Location name='nums'\ntype: int"];
399 -> 400;
398 [shape=box, label="FuncCall name='print_int'\ntype: void"];
398 -> 399;
402 [shape=box, label="Literal value=' '\ntype: str"];
401 [shape=box, label="FuncCall name='print_str'\ntype: void"];
401 -> 402;
404 [shape=box, label="Location name='start'\ntype: int"];
406 [shape=box, label="Location name='start'\ntype: int"];
407 [shape=box, label="Literal value=1\ntype: int"];
405 [shape=box, label="BinaryOp op='+'\ntype: int"];
405 -> 406;
405 -> 407;
403 [shape=box, label="Assignment"];
403 -> 404;
403 -> 405;
397 [shape=box, label="Block\nsymbolTable: (empty)"];
397 -> 398;
397 -> 401;
397 -> 403;
393 [shape=box, label="WhileLoop"];
393 -> 394;
393 -> 397;
409 [shape=box, label="Literal value='\\n'\ntype: str"];
408 [shape=box, label="FuncCall name='print_str'\ntype: void"];
408 -> 409;
410 [shape=box, label="Return"];
342 [shape=box, label="Block\nsymbolTable: \n  start : int"];
342 -> 343;
342 -> 344;
342 -> 348;
342 -> 352;
342 -> 356;
342 -> 360;
342 -> 364;
342 -> 367;
342 -> 369;
342 -> 384;
342 -> 386;
342 -> 389;
342 -> 391;
342 -> 393;
342 -> 408;
342 -> 410;
341 [shape=box, label="FuncDecl name='test_sort'\nsymbolTable: \n  len : int"];
341 -> 342;
414 [shape=box, label="Literal value=5\ntype: int"];
415 [shape=box, label="Literal value=120\ntype: int"];
413 [shape=box, label="FuncCall name='test_fact'\ntype: void"];
413 -> 414;
413 -> 415;
417 [shape=box, label="Literal value=0\ntype: int"];
418 [shape=box, label="Literal value=1\ntype: int"];
416 [shape=box, label="FuncCall name='test_fact'\ntype: void"];
416 -> 417;
416 -> 418;
420 [shape=box, label="Literal value=1\ntype: int"];
421 [shape=box, label="Literal value=false\ntype: bool"];
419 [shape=box, label="FuncCall name='test_prime'\ntype: void"];
419 -> 420;
419 -> 421;
423 [shape=box, label="Literal value=7\ntype: int"];
424 [shape=box, label="Literal value=true\ntype: bool"];
422 [shape=box, label="FuncCall name='test_prime'\ntype: void"];
422 -> 423;
422 -> 424;
426 [shape=box, label="Literal value=8\ntype: int"];
427 [shape=box, label="Literal value=false\ntype: bool"];
425 [shape=box, label="FuncCall name='test_prime'\ntype: void"];
425 -> 426;
425 -> 427;
429 [shape=box, label="Literal value=100\ntype: int"];
430 [shape=box, label="Literal value=false\ntype: bool"];
428 [shape=box, label="FuncCall name='test_prime'\ntype: void"];
428 -> 429;
428 -> 430;
432 [shape=box, label="Literal value=10\ntype: int"];
433 [shape=box, label="Literal value=15\ntype: int"];
434 [shape=box, label="Literal value=5\ntype: int"];
431 [shape=box, label="FuncCall name='test_gcd'\ntype: void"];
431 -> 432;
431 -> 433;
431 -> 434;
436 [shape=box, label="Literal value=17\ntype: int"];
437 [shape=box, label="Literal value=13\ntype: int"];
438 [shape=box, label="Literal value=1\ntype: int"];
435 [shape=box, label="FuncCall name='test_gcd'\ntype: void"];
435 -> 436;
435 -> 437;
435 -> 438;
440 [shape=box, label="Literal value=100\ntype: int"];
441 [shape=box, label="Literal value=25\ntype: int"];
442 [shape=box, label="Literal value=25\ntype: int"];
439 [shape=box, label="FuncCall name='test_gcd'\ntype: void"];
439 -> 440;
439 -> 441;
439 -> 442;
444 [shape=box, label="Literal value=5\ntype: int"];
445 [shape=box, label="Literal value=21\ntype: int"];
443 [shape=box, label="FuncCall name='test_sum'\ntype: void"];
443 -> 444;
443 -> 445;
447 [shape=box, label="Literal value=0\ntype: int"];
448 [shape=box, label="Literal value=0\ntype: int"];
446 [shape=box, label="FuncCall name='test_sum'\ntype: void"];
446 -> 447;
446 -> 448;
450 [shape=box, label="Literal value=4\ntype: int"];
449 [shape=box, label="FuncCall name='test_sort'\ntype: void"];
449 -> 450;
452 [shape=box, label="Literal value=100\ntype: int"];
451 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
451 -> 452;
454 [shape=box, label="Literal value=0\ntype: int"];
453 [shape=box, label="Return"];
453 -> 454;
412 [shape=box, label="Block\nsymbolTable: (empty)"];
412 -> 413;
412 -> 416;
412 -> 419;
412 -> 422;
412 -> 425;
412 -> 428;
412 -> 431;
412 -> 435;
412 -> 439;
412 -> 443;
412 -> 446;
412 -> 449;
412 -> 451;
412 -> 453;
411 [shape=box, label="FuncDecl name='main'\nsymbolTable: (empty)"];
411 -> 412;
0 [shape=box, label="Program\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  fact : (int) -> int\n  fib : (int) -> int\n  is_prime : (int) -> bool\n  gcd : (int, int) -> int\n  sum_nums : (int) -> int\n  sort_nums : (int) -> void\n  draw_triangle : (int) -> void\n  test_fact : (int, int) -> void\n  test_prime : (int, bool) -> void\n  test_gcd : (int, int, int) -> void\n  test_sum : (int, int) -> void\n  test_sort : (int) -> void\n  main : () -> int\n  nums : int [100]"];
0 -> 1;
0 -> 2;
0 -> 18;
0 -> 44;
0 -> 82;
0 -> 103;
0 -> 136;
0 -> 185;
0 -> 244;
0 -> 263;
0 -> 282;
0 -> 302;
0 -> 341;
0 -> 411;
}
